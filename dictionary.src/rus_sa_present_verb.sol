// *******************************************************************************
// глагольное сказуемое прошедшего, настоящего или аналитического будущего времени
// *******************************************************************************


// --------------------------------------------------------
// Несколько глаголов участвуют в роли квазивспомогательных
// в конструкциях императива:
//
// Дайте-ка я взгляну.
// ^^^^^^^^

patterns ВспомогГлаголИмператив export { node:root_node }

wordentry_set ВспомогГлаголИмператив0=глагол:{ давать, дать, пойти, идти, сходить, попробовать }
pattern ВспомогГлаголИмператив
{
 ГлСПостфиксом{ НАКЛОНЕНИЕ:ПОБУД ВспомогГлаголИмператив0 } : export{ node:root_node }
}

// На всякий случай, если в ВспомогГлаголИмператив0 перечислены не все возможные
// вспомогательные глаголы - для любых глаголов с небольшим штрафом разрешаем тоже.
pattern ВспомогГлаголИмператив
{
 ГлСПостфиксом{ НАКЛОНЕНИЕ:ПОБУД ~ВспомогГлаголИмператив0 } : export{ node:root_node }
} : ngrams { -4 }


// ----------------------------------------------------------


patterns ГлНаст0 export { node:root_node ЛИЦО ЧИСЛО РОД МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }

// кенгуру спал
//         ^^^^
pattern ГлНаст0
{
 v=Гл1{ ВРЕМЯ:ПРОШЕДШЕЕ } : export { РОД ЛИЦО ЧИСЛО МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
}

// кенгуру спит
//         ^^^^
pattern ГлНаст0
{
 v=Гл1{ ВРЕМЯ:НАСТОЯЩЕЕ } : export { РОД ЛИЦО ЧИСЛО МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
}

// кенгуру уснёт
//         ^^^^^
pattern ГлНаст0
{
 v=Гл1{ ВРЕМЯ:БУДУЩЕЕ } : export { РОД ЛИЦО ЧИСЛО МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
}


// ты поищи!
//    ^^^^^
pattern ГлНаст0
{
 v=Гл1{ НАКЛОНЕНИЕ:ПОБУД } : export { РОД ЛИЦО ЧИСЛО МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
}

// ############################################################


// ===========================================================
// Восходящая сборка модального ядра настояще-будущего времени
// ===========================================================

patterns ГлНастМодальн_Восх { bottomup  } export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }

pattern ГлНастМодальн_Восх
{
 Гл1{ ВРЕМЯ:ПРОШЕДШЕЕ МОДАЛЬНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}

pattern ГлНастМодальн_Восх
{
 Гл1{ ВРЕМЯ:НАСТОЯЩЕЕ МОДАЛЬНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}

pattern ГлНастМодальн_Восх
{
 Гл1{ ВРЕМЯ:БУДУЩЕЕ МОДАЛЬНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}

// Для образования синтетического будущего времени:
// мы будем плясать
//    ^^^^^^^^^^^^^
pattern ГлНастМодальн_Восх
{
 Гл1{ ГлаголБыть ВРЕМЯ:БУДУЩЕЕ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}


// Попробуйте-ка это отрицать!
// ^^^^^^^^^^^^^
pattern ГлНастМодальн_Восх
{
 Гл1{ НАКЛОНЕНИЕ:ПОБУД } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}


pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ =v:ПАДЕЖ } : export {
                                    @except(v:ПАДЕЖ,ПАДЕЖ)
                                    @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                   }
} : links
{
 v.<OBJECT>obj
}
: ngrams
{
 -2 // для модальных конструкций это нетипично,
    // чтобы дополнение прикреплялось к модальному
 v_obj_score(v,obj)
}




pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ !=v:ПАДЕЖ } : export {
                                     @except(v:ПАДЕЖ,ПАДЕЖ)
                                     @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                    }
} : links { v.<OBJECT>obj }
: ngrams
{
 -11
 v_obj_score(v,obj)
}



pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх{ ВРЕМЯ:БУДУЩЕЕ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 aux=ВспомогГлаголИмператив
}
: links { v.<AUX2IMPERATIVE_VERB>aux }


patterns ОбстГлагСказ export { node:root_node }

pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 adv=ОбстГлагСказ
}
: links { v.<ATTRIBUTE>adv }
: ngrams { adv_verb_score( adv, v ) }



pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 attr=ОбособленныйАтрибут
} : links
{
 v.<SEPARATE_ATTR>attr
}

pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 attr=ВводнАктант
} : links
{
 v.<BEG_INTRO>attr
}

pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 attr=Детализатор
} : links
{
 v.<DETAILS>attr
}


pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 x=ПрямоеОбращение
} : links { v.<APPEAL>x }

pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 pn=ПредлогИСущ{ гл_предл( v, _.prepos, _.n2 ) }
} : links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 prepos_score( v, pn.prepos )
 ngram3( v, pn.prepos, pn.n2 )
}


pattern ГлНастМодальн_Восх
{
 v=ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
 q2=ЗакрывающаяКавычка
}
: links { v.<APPEND_QUOTE>q2 }
: ngrams { -1 }



// --------------------------------------------------------

patterns ГлНастМодальн_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }

pattern ГлНастМодальн_Нисх
{
 ГлНастМодальн_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}

pattern ГлНастМодальн_Нисх
{
 aux=ВспомогГлаголИмператив
 v=ГлНастМодальн_Нисх{ ВРЕМЯ:БУДУЩЕЕ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}
: links { v.<AUX2IMPERATIVE_VERB>aux }



// он первым начал кидаться камнями
pattern ГлНастМодальн_Нисх export{ ЧИСЛО ЛИЦО РОД ПЕРЕХОДНОСТЬ (ПАДЕЖ) ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
{
 obj=ПорядкЧислКакОбст
 v=ГлНастМодальн_Нисх{ =obj:ЧИСЛО =obj:ЛИЦО =obj:РОД } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}
: links { v.<RIGHT_INSTR_OBJECT>obj }
: ngrams
{
 -1
 ВалентностьГлагола(v)
}

// Мы весело играли
pattern ГлНастМодальн_Нисх
{
 adv=ОбстГлагСказ
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links { v.<ATTRIBUTE>adv }
: ngrams { adv_verb_score( adv, v ) }



pattern ГлНастМодальн_Нисх
{
 attr=ОбособленныйАтрибут
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links
{
 v.<SEPARATE_ATTR>attr
}

pattern ГлНастМодальн_Нисх
{
 attr=ВводнАктант
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links
{
 v.<BEG_INTRO>attr
}


pattern ГлНастМодальн_Нисх
{
 attr=Детализатор
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links
{
 v.<DETAILS>attr
}


// Ниночка, извините, я взволнована и поэтому резка.
// ^^^^^^^^
pattern ГлНастМодальн_Нисх
{
 x=ПрямоеОбращение
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links { v.<APPEAL>x }

pattern ГлНастМодальн_Нисх
{
 pn=ПредлогИСущ
 v=ГлНастМодальн_Нисх { гл_предл(_,pn.prepos,pn.n2) } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 prepos_score( v, pn.prepos )
 ngram3(v,pn.prepos,pn.n2)
}



pattern ГлНастМодальн_Нисх
{
 obj=ГлОбъект
 v=ГлНастМодальн_Нисх { ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ =Obj:ПАДЕЖ }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
} : links { v.<OBJECT>obj }
: ngrams
{
 -2 // обычно в модальном обороте прямое дополнение прикрепляется именно к инфинитиву
 v_obj_score( v, obj )
}


pattern ГлНастМодальн_Нисх
{
 obj=ГлОбъект
 v=ГлНастМодальн_Нисх { !=Obj:ПАДЕЖ }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
} : links { v.<OBJECT>obj }
: ngrams
{
 -11
 v_obj_score( v, obj )
}


pattern ГлНастМодальн_Нисх
{
 q1=ОткрывающаяКавычка
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
} 
: links { v.<PREPEND_QUOTE>q1 }
: ngrams { -1 }


// -------------------------------------------

patterns ГлНастМодальн export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
pattern ГлНастМодальн
{
 v=ГлНастМодальн_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
}
: ngrams
{
 ВалентностьГлагола(v)
}


patterns ГлНастМодальн_НЕ export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
pattern ГлНастМодальн_НЕ
{
 p=частица:не{}
 v=Гл1{ МОДАЛЬНЫЙ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН } : export { node:root_node ЛИЦО ЧИСЛО РОД ВРЕМЯ НАКЛОНЕНИЕ }
} : links { v.<NEGATION_PARTICLE>p }


// --------------------------------------------------------

// разговор получается интересный
//          ^^^^^^^^^^^^^^^^^^^^^
pattern ГлНаст export { ЧИСЛО ЛИЦО РОД ПЕРЕХОДНОСТЬ (ПАДЕЖ) ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
{
 adv=@optional(ГруппаНареч2)
 v=ПолучатьсяКакСвязка/*{ ~время:ПРОШЕДШЕЕ }*/ : export{ ЧИСЛО ЛИЦО РОД ПЕРЕХОДНОСТЬ:НЕПЕРЕХОДНЫЙ ВРЕМЯ НАКЛОНЕНИЕ node:root_node }
 obj=ГруппаПрил2{ =V:ЧИСЛО =V:РОД ПАДЕЖ:ИМ }
} : links
{
 v.{
    ~<ATTRIBUTE>adv
    <ATTRIBUTE>obj
   }
}
: ngrams
{
 -1
 ВалентностьГлагола(v)
}








// -----------------------------------------------------------------------
// ПОЛНЫЙ ПРЕДИКАТ (СКАЗУЕМОЕ+ПОДЛЕЖАЩЕЕ) НАСТОЯЩЕГО ИЛИ БУДУЩЕГО ВРЕМЕНИ,
// В КОТОРОМ ГЛАГОЛ В ЛИЧНОЙ ФОРМЕ СТОИТ В КОРНЕ
// (сравни с ГлНастИнфНисх_Сказ).


patterns ГлНастСказ export { ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }

pattern ГлНастСказ export { ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
{
 ГлНаст0 : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ @add(ПАДЕЖВАЛ:ИМ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} : ngrams { -1 } // оштрафуем заранее, а при присоединении
                  // подлежащего - компенсируем, чтобы предикат без подлежащего
                  // был менее достоверен.


// -----------------------
// Восходящая сборка
// -----------------------

patterns ГлНастСказ_Восх { bottomup  } export { ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }

pattern ГлНастСказ_Восх
{
 ГлНастСказ : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}

// Давайте мы поставим кровать сюда.
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ /*ВРЕМЯ:БУДУЩЕЕ*/ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 aux=ВспомогГлаголИмператив
}
: links { v.<AUX2IMPERATIVE_VERB>aux }



pattern ГлНастСказ_Восх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 v=ГлНастСказ_Восх{ ПАДЕЖВАЛ:ИМ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 sbj=Подлежащее{ =v:ЧИСЛО =v:ЛИЦО =v:РОД }
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 1
 sbj_v_score(sbj,v)
}

// несогласованное подлежащее и сказуемое
pattern ГлНастСказ_Восх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 sbj=Подлежащее
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 -10
 sbj_v_score(sbj,v)
}


// ----------------------------------------

patterns Что_Подлеж export { node:root_node }

pattern Что_Подлеж
{
 n=местоим_сущ:что{ падеж:им } : export { node:root_node }
}

// Что же это был за человек?
// ^^^^^^
pattern Что_Подлеж
{
 n=местоим_сущ:что{ падеж:им } : export { node:root_node }
 p=ЧастицаЖе
} : links { n.<POSTFIX_PARTICLE>p }

// Особая конструкция "составного подлежащего":
// И что это будут за люди?
//   ^^^^^^^       ^^^^^^^
pattern ГлНастСказ_Восх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 w1=Что_Подлеж
 w2=ЭТО_Местоим
 v=ГлНастСказ_Восх{ ПАДЕЖВАЛ:ИМ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 p=частица:за{}
 sbj=Подлежащее{ =v:ЧИСЛО =v:ЛИЦО =v:РОД }
}
: links
{
 v.<SUBJECT>sbj.{
                 <NEXT_COLLOCATION_ITEM>w1
                 <NEXT_COLLOCATION_ITEM>w2
                 <PREFIX_PARTICLE>p
                }
}
: ngrams
{
 1
 sbj_v_score(sbj,v)
}


// Я занял твое место?
//   ^^^^^      ^^^^^
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ =v:ПАДЕЖ } : export {
                                    @except(v:ПАДЕЖ,ПАДЕЖ)
                                    @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                   }
}
: links { v.<OBJECT>obj }
: ngrams { v_obj_score(v,obj) }


pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ !=v:ПАДЕЖ } : export {
                                     @except(v:ПАДЕЖ,ПАДЕЖ)
                                     @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                    }
}
: links { v.<OBJECT>obj }
: ngrams
{
 -11
 v_obj_score(v,obj)
}




// Индуцированная модальность:
// Иметь смелость сказать правду
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

wordentry_set ИметьЧтотоСделать=глагол:{ иметь }
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН ИметьЧтотоСделать } : export { node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ ПАДЕЖ:ВИН } : export {
                                    @except(v:ПАДЕЖ,ПАДЕЖ)
                                    @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                   }
 inf=Инф2
}
: links { v.{ <OBJECT>obj <INFINITIVE>inf } }








// дательное дополнение+предложное премыкание НА/В+предл:
// садится на спину второму
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ ~ПАДЕЖ:ДАТ } : export { node:root_node ЛИЦО ЧИСЛО РОД МОДАЛЬНЫЙ ПАДЕЖВАЛ ПАДЕЖ ПЕРЕХОДНОСТЬ НАКЛОНЕНИЕ }
 obj=ДатОбъект
}
: links { v.<OBJECT>obj }
: ngrams { -10 }



pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 adv=ОбстГлагСказ
}
: links { v.<ATTRIBUTE>adv }
: ngrams { adv_verb_score( adv, v ) }


/*
// ??? удалить ???
// Он приказал ему сесть на пол
pattern ГлНастСказ_Восх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ (МОДАЛЬНЫЙ) }
{
 v=ГлНастСказ_Восх{ МОДАЛЬНЫЙ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ }
 inf=Инф2
} : links
{
 v.<INFINITIVE>inf
}
: ngrams
{
 -5 // обычно модальные конструкции собираются так, что все дополнения прикрепляются
    // к инфинитиву.
 v_inf_score( v, inf )
}
*/


pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 attr=ОбособленныйАтрибут
} : links
{
 v.<SEPARATE_ATTR>attr
}


pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 attr=ВводнАктант
} : links
{
 v.<BEG_INTRO>attr
}

pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 attr=Детализатор
} : links
{
 v.<DETAILS>attr
}


pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 x=ПрямоеОбращение
} : links { v.<APPEAL>x }


// он прыгнул и зацепился за край ограды
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 pn=ПредлогИСущ{ гл_предл( v, _.prepos, _.n2 ) }
} : links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 prepos_score( v, pn.prepos )
 ngram3( v, pn.prepos, pn.n2 )
}


// Правое придаточное:
// Он несет такую ахинею, что уши вянут
pattern ГлНастСказ_Восх export { ЛИЦО ЧИСЛО РОД (ПАДЕЖ) ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ (МОДАЛЬНЫЙ) НАКЛОНЕНИЕ node:root_node }
{
 v=ГлНастСказ_Восх : export { ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ:НЕПЕРЕХОДНЫЙ ПАДЕЖВАЛ НАКЛОНЕНИЕ node:root_node }
 comma=','
 conj=СоединДляПридаточного
 p=ПридаточноеВОбороте
 comma2=@coalesce(',')
} : links
{
 v.<SUBORDINATE_CLAUSE>comma.
    <NEXT_COLLOCATION_ITEM>conj.
     <NEXT_COLLOCATION_ITEM>p.
      ~<PUNCTUATION>comma2
}


// ------------------------------------------

// я понимаю, о чем ты говоришь
pattern ГлНастСказ_Восх export { ЛИЦО ЧИСЛО РОД (ПАДЕЖ) ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ (МОДАЛЬНЫЙ) НАКЛОНЕНИЕ node:root_node }
{
 v=ГлНастСказ_Восх{  ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН } : export { ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ:НЕПЕРЕХОДНЫЙ ПАДЕЖВАЛ НАКЛОНЕНИЕ node:root_node }
 p=БессоюзноеПридаточное
}
: links { v.<SUBORDINATE_CLAUSE>p }
: ngrams
{
 -1
 ВалентностьБессоюзнПридаточн(v)
}

// --------------------------------------

// Выбился он в лидеры заезда
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ ГлагСДопВИмП } : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 prep=предлог:в{}
 obj=ГруппаСущ4{ ПАДЕЖ:ИМ одуш:одуш число:мн }
}
: links { v.<PREPOS_ADJUNCT>prep.<OBJECT>obj }
: ngrams { ngram3(v,prep,obj) }


// притворился кот спящим
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх{ ПритворитьсяТакимтоГл ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ТВОР } : export{ ЧИСЛО ЛИЦО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 obj=ГлДопПрил{ =V:ЧИСЛО =V:ЛИЦО =V:РОД } : export {
                                                    @except(v:ПАДЕЖ,ПАДЕЖ)
                                                    @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                                   }
}
: links { v.<OBJECT>obj }
: ngrams { v_obj_score(v,obj) }


// ----------------------------------------------------

// +++++ составное сказуемое

patterns СочинитСоюзПредикат export { node:root_node }
pattern СочинитСоюзПредикат
{
 ЛогичСоюз : export { node:root_node }
}

wordentry_set ПротивитСоюзыПредикат = союз:{ но, "не то", "а не то", "а то" }
pattern СочинитСоюзПредикат
{
 ПротивитСоюзыПредикат : export { node:root_node }
}

pattern СочинитСоюзПредикат
{
 conj1=союз:хотя{} : export { node:root_node }
 conj2=союз:и{} 
}
: links { conj1.<NEXT_COLLOCATION_ITEM>conj2 }
: ngrams { 1 }


// -----------------------------------------


// Говорит он и смеётся
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 conj=СочинитСоюзПредикат
 v2=ГлНаст{ =v:ЛИЦО =v:ЧИСЛО =v:РОД =v:ВРЕМЯ =v:НАКЛОНЕНИЕ }
 @noshift(ПравыйОграничительОборота)
}
: links { v.<RIGHT_LOGIC_ITEM>conj.<NEXT_COLLOCATION_ITEM>v2 }
: ngrams { 2 }

// Обычно союзные паттерны связывают глаголы в одинаковой форме.
// Говорит он, хотя и не подаёт руки
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 comma=','
 conj=СочинитСоюзПредикат
 v2=ГлНаст{ =v:ЛИЦО =v:ЧИСЛО =v:РОД =v:ВРЕМЯ =v:НАКЛОНЕНИЕ }
 @noshift(ПравыйОграничительОборота)
}
: links
{
 v.<RIGHT_LOGIC_ITEM>comma.
    <NEXT_COLLOCATION_ITEM>conj.
     <NEXT_COLLOCATION_ITEM>v2
}
: ngrams { 2 }

// Иногда союзные паттерны могут связывать глаголы в разной форме:
// Вставай, не то опоздаем
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 comma=','
 conj=СочинитСоюзПредикат
 v2=ГлНаст
 @noshift(ПравыйОграничительОборота)
}
: links
{
 v.<RIGHT_LOGIC_ITEM>comma.
    <NEXT_COLLOCATION_ITEM>conj.
     <NEXT_COLLOCATION_ITEM>v2
}




// Говорит он, зевает и закрывает глаза
pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
 comma=','
 v2=ГлНаст{ =v:ЛИЦО =v:ЧИСЛО =v:РОД =v:ВРЕМЯ =v:НАКЛОНЕНИЕ }
 @noshift(ПравыйОграничительОборота)
}
: links
{
 v.<RIGHT_LOGIC_ITEM>comma.
    <NEXT_COLLOCATION_ITEM>v2
}
: ngrams { 1 }



pattern ГлНастСказ_Восх
{
 v=ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
 q2=ЗакрывающаяКавычка
}
: links { v.<APPEND_QUOTE>q2 }
: ngrams { -1 }



// --------------------------------------------------------
// Нисходящая сборка
// --------------------------------------------------------

patterns ГлНастСказ_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }

pattern ГлНастСказ_Нисх
{
 ГлНастСказ_Восх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}


// -----------------------------------------------------

pattern ГлНастСказ_Нисх
{
 adv=ЛевАтрибутСказуем
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links { v.<ATTRIBUTE>adv }
: ngrams { -2 }


// Кровать сюда поставим давайте
pattern ГлНастСказ_Нисх
{
 aux=ВспомогГлаголИмператив
 v=ГлНастСказ_Нисх{ /*ВРЕМЯ:БУДУЩЕЕ*/ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}
: links { v.<AUX2IMPERATIVE_VERB>aux }


// -----------------------------------------------------


pattern ГлНастСказ_Нисх
{
 adv=ОбстГлагСказ
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<ATTRIBUTE>adv
}
: ngrams
{
 adv_verb_score( adv, v )
}


/*
// ??? УДАЛИТЬ ???
// Он сесть на пол приказал ему
pattern ГлНастСказ_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ (МОДАЛЬНЫЙ) }
{
 inf=Инф2
 v=ГлНастСказ_Нисх{ МОДАЛЬНЫЙ НАКЛОНЕНИЕ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ }
}  
: links { v.<INFINITIVE>inf }
: ngrams
{
 -5
 v_inf_score( v, inf )
}
*/


pattern ГлНастСказ_Нисх
{
 attr=ОбособленныйАтрибут
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<SEPARATE_ATTR>attr
}

pattern ГлНастСказ_Нисх
{
 attr=ВводнАктант
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<BEG_INTRO>attr
}


pattern ГлНастСказ_Нисх
{
 attr=Детализатор
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<DETAILS>attr
}


pattern ГлНастСказ_Нисх
{
 x=ПрямоеОбращение
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<APPEAL>x
}

pattern ГлНастСказ_Нисх
{
 pn=ПредлогИСущ
 v=ГлНастСказ_Нисх { гл_предл(_,pn.prepos,pn.n2) } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
} 
: links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 -1
 prepos_score( v, pn.prepos )
}



pattern ГлНастСказ_Нисх
{
 obj=ГлОбъект
 v=ГлНастСказ_Нисх { ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ =Obj:ПАДЕЖ }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
} : links { v.<OBJECT>obj }
: ngrams
{
 -1
 v_obj_score( v, obj )
}



pattern ГлНастСказ_Нисх
{
 obj=ГлОбъект
 v=ГлНастСказ_Нисх { !=Obj:ПАДЕЖ }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
} : links { v.<OBJECT>obj }
: ngrams
{
 -11
 v_obj_score( v, obj )
}



patterns ЧтоМестВин export { node:root_node }

pattern ЧтоМестВин
{
 местоим_сущ:что{ падеж:вин } :export { node:root_node }
}

// Что же ты наделал?
// ^^^^^^
pattern ЧтоМестВин
{
 n=местоим_сущ:что{ падеж:вин } :export { node:root_node }
 p=ЧастицаЖе
}
: links { n.<POSTFIX_PARTICLE>p }


// Вопросительное местоимение ЧТО с непереходными глаголами:
// Что ты думаешь на этот счет?
// ^^^
pattern ГлНастСказ_Нисх
{
 obj=ЧтоМестВин
 v=ГлНастСказ_Нисх { ~ПАДЕЖ:ВИН }
     : export { node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ ПАДЕЖ ПЕРЕХОДНОСТЬ НАКЛОНЕНИЕ }
}
: links { v.<OBJECT>obj }
: ngrams { -5 }



// он дракону на спину садится
pattern ГлНастСказ_Нисх
{
 obj=ДатОбъект
 v=ГлНастСказ_Нисх { ~ПАДЕЖ:ДАТ }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ
               ПАДЕЖ ПЕРЕХОДНОСТЬ
              }
}
: links { v.<OBJECT>obj }
: ngrams { -10 }




pattern ГлНастСказ_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 sbj=Подлежащее
 v=ГлНастСказ_Нисх{ ПАДЕЖВАЛ:ИМ =sbj:ЧИСЛО =sbj:ЛИЦО =sbj:РОД } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 sbj_v_score(sbj,v)
 1
}

pattern ГлНастСказ_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 sbj=Подлежащее
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 -10
 sbj_v_score(sbj,v)
}



// Безличная конструкция:
// Тебе что, плохо живется?
pattern ГлНастСказ_Нисх export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
{
 obj=ДатОбъект
 v=ГлНастСказ_Нисх{ ПАДЕЖВАЛ:ИМ ЧИСЛО:ЕД ЛИЦО:3 } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}
: links { v.<OBJECT>obj }
: ngrams
{
 v_obj_score(v,obj)
 -7
}



// Выбился он в лидеры заезда
pattern ГлНастСказ_Нисх
{
 prep=предлог:в{}
 obj=ГруппаСущ4{ ПАДЕЖ:ИМ одуш:одуш число:мн }
 v=ГлНастСказ_Нисх{ ГлагСДопВИмП } : export { ЛИЦО ЧИСЛО РОД ПАДЕЖ ПАДЕЖВАЛ ПЕРЕХОДНОСТЬ МОДАЛЬНЫЙ НАКЛОНЕНИЕ node:root_node }
}
: links { v.<PREPOS_ADJUNCT>prep.<OBJECT>obj }
: ngrams { -1 ngram3(v,prep,obj) }


// бедным и несчастным притворился кот
pattern ГлНастСказ_Нисх
{
 obj=ГлДопПрил
 v=ГлНастСказ_Нисх{ ПритворитьсяТакимтоГл ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ТВОР =obj:ЧИСЛО =obj:ЛИЦО =obj:РОД }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
}
: links { v.<OBJECT>obj }
: ngrams { v_obj_score(v,obj) }




pattern ГлНастСказ_Нисх
{
 q1=ОткрывающаяКавычка
 v=ГлНастСказ_Нисх : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ }
}
: links { v.<PREPEND_QUOTE>q1 }
: ngrams { -1 }



// Индуцированная модальность:
// Честь имею кланяться.
// ^^^^^^^^^^^^^^^^^^^^
pattern ГлНастСказ_Нисх
{
 obj=ГлОбъект{ ПАДЕЖ:ВИН }
 v=ГлНастСказ_Нисх { ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН ИметьЧтотоСделать }
     : export { 
               node:root_node ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ МОДАЛЬНЫЙ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }

 inf=Инф2
}
: links { v.{ <OBJECT>obj <INFINITIVE>inf } }




// -------------------------------------------

pattern ГлНаст
{
 v=ГлНастСказ_Нисх{ ПАДЕЖВАЛ:ИМ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}
: ngrams
{
 ВалентностьГлагола(v)
}


// -------------------------------------------

pattern ГлПредикат
{
 v=ГлНастСказ_Нисх : export { node:root_node }
}
: ngrams
{
 ВалентностьПредиката(v)
 ВалентностьГлагола(v)
}


// ###############################################################
// ПОЛНЫЙ ПРЕДИКАТ (СКАЗУЕМОЕ+ПОДЛЕЖАЩЕЕ) для случаев, когда
// личная форма глагола является модальным глаголом и присоединяет
// инфинитив

// --------------------------------------------------------

patterns ГлНастИнфВосх_Сказ { bottomup  } export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД НАКЛОНЕНИЕ }

pattern ГлНастИнфВосх_Сказ export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED (ЛИЦО) (ЧИСЛО) (РОД) (ПАДЕЖВАЛ) (НАКЛОНЕНИЕ) }
{
 Инф2БезДоп : export {
                      node:root_node
                      ПЕРЕХОДНОСТЬ
                      ПАДЕЖ
                      AUX_VERB_REQUIRED:1
                      @add(ПАДЕЖВАЛ:ИМ)
                     }
}
: ngrams { -1 } // пока отштрафуем за отсутствие подлежащего


pattern ГлНастИнфВосх_Сказ export { node:root_node ЛИЦО ЧИСЛО РОД AUX_VERB_REQUIRED ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) НАКЛОНЕНИЕ }
{
 v=ГлНастИнфВосх_Сказ{ ПАДЕЖВАЛ:ИМ } : export { node:root_node AUX_VERB_REQUIRED ПЕРЕХОДНОСТЬ ПАДЕЖ НАКЛОНЕНИЕ }
 sbj=Подлежащее{ =v:ЧИСЛО =v:ЛИЦО =v:РОД } : export { ЛИЦО ЧИСЛО РОД }
} 
: links { v.<SUBJECT>sbj }
: ngrams
{
 1
 sbj_v_score(sbj,v)
}


// Несогласованные подлежащее и сказуемое
pattern ГлНастИнфВосх_Сказ export { node:root_node ЛИЦО ЧИСЛО РОД AUX_VERB_REQUIRED ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) НАКЛОНЕНИЕ }
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node AUX_VERB_REQUIRED ПЕРЕХОДНОСТЬ ПАДЕЖ НАКЛОНЕНИЕ }
 sbj=Подлежащее : export { ЛИЦО ЧИСЛО РОД }
} 
: links { v.<SUBJECT>sbj }
: ngrams
{
 -10
 sbj_v_score(sbj,v)
}


tree_scorers ГлагИнф

pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ{AUX_VERB_REQUIRED:1} : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED:0 ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 aux=ГлНастМодальн{ =v:ЛИЦО =v:ЧИСЛО =v:РОД } : export { ЛИЦО ЧИСЛО РОД } 
} : links
{
 v.<LEFT_AUX_VERB>aux
}
: ngrams { ГлагИнф(v) }


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ } : export { node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ =v:ПАДЕЖ } : export {
                                    @except(v:ПАДЕЖ,ПАДЕЖ)
                                    @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                   }
} : links
{
 v.<OBJECT>obj
}
: ngrams
{
 v_obj_score(v,obj)
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ !=v:ПАДЕЖ } : export {
                                     @except(v:ПАДЕЖ,ПАДЕЖ)
                                     @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                    }
} : links
{
 v.<OBJECT>obj
}
: ngrams
{
 -11
 v_obj_score(v,obj)
}



// разрешим присоединение родительного объекта к переходному
// инфинитиву с винительной валентностью для обработки конструкций
// с отрицанием модального глагола:
// я не могу сделать этого
//   ^^^^^^^ ^^^^^^  ^^^^^
pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН } : export { node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖ @remove(ПАДЕЖ:ВИН) @remove(ПАДЕЖ:РОД) ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 obj=ГлОбъект{ ПАДЕЖ:РОД } : export {
                                     @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
                                    }
}
: links { v.<OBJECT>obj }
: ngrams
{
 -3
 v_obj_score(v,obj)
}




pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 adv=ОбстГлагСказ
} : links
{
 v.<ATTRIBUTE>adv
}
: ngrams
{
 adv_verb_score( adv, v )
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 attr=ОбособленныйАтрибут
} : links
{
 v.<SEPARATE_ATTR>attr
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 attr=ВводнАктант
} : links
{
 v.<BEG_INTRO>attr
}

pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 attr=Детализатор
} : links
{
 v.<DETAILS>attr
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 x=ПрямоеОбращение
} : links
{
 v.<APPEAL>x
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 pn=ПредлогИСущ{ гл_предл( v, _.prepos, _.n2 ) }
} : links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 prepos_score( v, pn.prepos )
 ngram3( v, pn.prepos, pn.n2 )
}


pattern ГлНастИнфВосх_Сказ
{
 v=ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
 q2=ЗакрывающаяКавычка
}
: links { v.<APPEND_QUOTE>q2 }
: ngrams { -1 }


// --------------------------------------------------------

patterns ГлНастИнфНисх_Сказ export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ ПАДЕЖВАЛ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД НАКЛОНЕНИЕ }

pattern ГлНастИнфНисх_Сказ
{
 ГлНастИнфВосх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
}

// я хочу это знать
// ^
pattern ГлНастИнфНисх_Сказ export { node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) НАКЛОНЕНИЕ }
{
 sbj=Подлежащее : export { ЛИЦО ЧИСЛО РОД }
 v=ГлНастИнфНисх_Сказ{ ПАДЕЖВАЛ:ИМ =sbj:ЧИСЛО =sbj:ЛИЦО =sbj:РОД } : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED НАКЛОНЕНИЕ }
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 sbj_v_score(sbj,v)
 1 // компенсируем начальный штраф за отсутствие подлежащего
}

pattern ГлНастИнфНисх_Сказ export { node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ (ПАДЕЖВАЛ) НАКЛОНЕНИЕ }
{
 sbj=Подлежащее : export { ЛИЦО ЧИСЛО РОД }
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED НАКЛОНЕНИЕ }
}
: links { v.<SUBJECT>sbj }
: ngrams
{
 -10
 sbj_v_score(sbj,v)
}



pattern ГлНастИнфНисх_Сказ
{
 aux=ГлНастМодальн : export { ЛИЦО ЧИСЛО РОД } 
 v=ГлНастИнфНисх_Сказ{ AUX_VERB_REQUIRED:1 =aux:ЛИЦО =aux:ЧИСЛО =aux:РОД } : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED:0 ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} : links
{
 v.<LEFT_AUX_VERB>aux
}



pattern ГлНастИнфНисх_Сказ
{
 adv=ОбстГлагСказ
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<ATTRIBUTE>adv
}
: ngrams
{
 adv_verb_score( adv, v )
}

// Тебе что, приходится экономить?
pattern ГлНастИнфНисх_Сказ
{
 adv=ЛевАтрибутСказуем
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links { v.<ATTRIBUTE>adv }
: ngrams { -2 }



pattern ГлНастИнфНисх_Сказ
{
 attr=ОбособленныйАтрибут
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<SEPARATE_ATTR>attr
}

pattern ГлНастИнфНисх_Сказ
{
 attr=ВводнАктант
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<BEG_INTRO>attr
}


pattern ГлНастИнфНисх_Сказ
{
 attr=Детализатор
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<DETAILS>attr
}


pattern ГлНастИнфНисх_Сказ
{
 x=ПрямоеОбращение
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<APPEAL>x
}

pattern ГлНастИнфНисх_Сказ
{
 pn=ПредлогИСущ
 v=ГлНастИнфНисх_Сказ{ гл_предл(_,pn.prepos,pn.n2) } : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links
{
 v.<PREPOS_ADJUNCT>pn
}
: ngrams
{
 -1
 prepos_score( v, pn.prepos )
 ngram3( v, pn.prepos, pn.n2 )
}



pattern ГлНастИнфНисх_Сказ
{
 obj=ГлОбъект
 v=ГлНастИнфНисх_Сказ{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ =Obj:ПАДЕЖ }
     : export { 
               node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
}
: links { v.<OBJECT>obj }
: ngrams
{
 -1
 v_obj_score( v, obj )
}


pattern ГлНастИнфНисх_Сказ
{
 obj=ГлОбъект
 v=ГлНастИнфНисх_Сказ{ !=Obj:ПАДЕЖ }
     : export { 
               node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ
               @except(ПАДЕЖ,obj:ПАДЕЖ)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
}
: links { v.<OBJECT>obj }
: ngrams
{
 -11
 v_obj_score( v, obj )
}


// разрешим присоединение родительного объекта к переходному
// инфинитиву с винительной валентностью для обработки конструкций
// с отрицанием модального глагола:
// я не могу этого сделать
//   ^^^^^^^ ^^^^^ ^^^^^^^
pattern ГлНастИнфНисх_Сказ
{
 obj=ГлОбъект{ ПАДЕЖ:РОД }
 v=ГлНастИнфНисх_Сказ{ ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ ПАДЕЖ:ВИН }
     : export { 
               node:root_node AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ ПАДЕЖ НАКЛОНЕНИЕ
               @remove(ПАДЕЖ:ВИН)
               @remove(ПАДЕЖ:РОД)
               @if_exported(ПЕРЕХОДНОСТЬ:ПЕРЕХОДНЫЙ,ПАДЕЖ)
              }
}
: links { v.<OBJECT>obj }
: ngrams
{
 -3
 v_obj_score( v, obj )
}




pattern ГлНастИнфНисх_Сказ
{
 q1=ОткрывающаяКавычка
 v=ГлНастИнфНисх_Сказ : export { node:root_node ПЕРЕХОДНОСТЬ ПАДЕЖ AUX_VERB_REQUIRED ЛИЦО ЧИСЛО РОД ПАДЕЖВАЛ НАКЛОНЕНИЕ }
} 
: links { v.<PREPEND_QUOTE>q1 }
: ngrams { -1 }


// -------------------------------------------

pattern ГлНаст
{
 v=ГлНастИнфНисх_Сказ{ AUX_VERB_REQUIRED:0 ПАДЕЖВАЛ:ИМ } : export { node:root_node ЛИЦО ЧИСЛО РОД ПЕРЕХОДНОСТЬ ПАДЕЖ ВРЕМЯ НАКЛОНЕНИЕ }
}
: ngrams
{
 ВалентностьГлагола(v)
}


// -------------------------------------------

pattern ГлПредикат
{
 v=ГлНастИнфНисх_Сказ{ AUX_VERB_REQUIRED:0 } : export { node:root_node }
}
: ngrams
{
 ВалентностьПредиката(v)
 ВалентностьГлагола(v)
}


// -------------------------------------------

